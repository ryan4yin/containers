name: Build kubernetes-python-client

# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions
on:
  push:
    branches:
      - main
    paths:
      - kubernetes-python-client/**
  pull_request:
    branches:
      - main
    paths:
      - kubernetes-python-client/**
  # manually trigger the workflow
  workflow_dispatch:


env:
  CONTEXT_PATH: kubernetes-python-client/
  IMAGE_NAME: ryan4yin/kubernetes-python-client

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) from Git ref & Github events.
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{env.IMAGE_NAME}}
            ghcr.io/${{env.IMAGE_NAME}}
          # generate Docker tags based on the following github events or git attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Kubernetes Python Client
        # https://github.com/docker/build-push-action
        uses: docker/build-push-action@v5
        with:
          context: ${{env.CONTEXT_PATH}}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build cache
          cache-from: type=registry,ref=ghcr.io/${{env.IMAGE_NAME}}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{env.IMAGE_NAME}}:buildcache,mode=max
        env:
          # reproducing the build environment
          SOURCE_DATE_EPOCH: 0
